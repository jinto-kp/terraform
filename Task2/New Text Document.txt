jinto123@ubuntu:~/Desktop/tf_test$ terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v4.65.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
jinto123@ubuntu:~/Desktop/tf_test$ terraform validate
Success! The configuration is valid.

jinto123@ubuntu:~/Desktop/tf_test$ terraform plan
aws_key_pair.webserver-key: Refreshing state... [id=webserver-key]
data.aws_ami.ubuntu: Reading...
aws_security_group.my-secnew: Refreshing state... [id=sg-04db40382a109c812]
data.aws_ami.ubuntu: Read complete after 1s [id=ami-062550af7b9fa7d05]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.web will be created
  + resource "aws_instance" "web" {
      + ami                                  = "ami-062550af7b9fa7d05"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "webserver-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "ubuntu-server"
        }
      + tags_all                             = {
          + "Name" = "ubuntu-server"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = [
          + "sg-04db40382a109c812",
        ]
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + private_ip = (known after apply)
  + public_ip  = (known after apply)
  + test       = {
      + architecture          = "x86_64"
      + arn                   = "arn:aws:ec2:ap-southeast-1::image/ami-062550af7b9fa7d05"
      + block_device_mappings = [
          + {
              + device_name  = "/dev/sda1"
              + ebs          = {
                  + delete_on_termination = "true"
                  + encrypted             = "false"
                  + iops                  = "0"
                  + snapshot_id           = "snap-0eb2c63573db65a51"
                  + throughput            = "0"
                  + volume_size           = "8"
                  + volume_type           = "gp2"
                }
              + no_device    = ""
              + virtual_name = ""
            },
          + {
              + device_name  = "/dev/sdb"
              + ebs          = {}
              + no_device    = ""
              + virtual_name = "ephemeral0"
            },
          + {
              + device_name  = "/dev/sdc"
              + ebs          = {}
              + no_device    = ""
              + virtual_name = "ephemeral1"
            },
        ]
      + boot_mode             = "legacy-bios"
      + creation_date         = "2023-03-28T23:34:55.000Z"
      + deprecation_time      = "2025-03-28T23:34:55.000Z"
      + description           = "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2023-03-28"
      + ena_support           = true
      + executable_users      = null
      + filter                = [
          + {
              + name   = "name"
              + values = [
                  + "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
                ]
            },
          + {
              + name   = "virtualization-type"
              + values = [
                  + "hvm",
                ]
            },
        ]
      + hypervisor            = "xen"
      + id                    = "ami-062550af7b9fa7d05"
      + image_id              = "ami-062550af7b9fa7d05"
      + image_location        = "amazon/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
      + image_owner_alias     = "amazon"
      + image_type            = "machine"
      + imds_support          = ""
      + include_deprecated    = false
      + kernel_id             = ""
      + most_recent           = true
      + name                  = "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
      + name_regex            = null
      + owner_id              = "099720109477"
      + owners                = [
          + "099720109477",
        ]
      + platform              = ""
      + platform_details      = "Linux/UNIX"
      + product_codes         = []
      + public                = true
      + ramdisk_id            = ""
      + root_device_name      = "/dev/sda1"
      + root_device_type      = "ebs"
      + root_snapshot_id      = "snap-0eb2c63573db65a51"
      + sriov_net_support     = "simple"
      + state                 = "available"
      + state_reason          = {
          + code    = "UNSET"
          + message = "UNSET"
        }
      + tags                  = {}
      + timeouts              = null
      + tpm_support           = ""
      + usage_operation       = "RunInstances"
      + virtualization_type   = "hvm"
    }

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
jinto123@ubuntu:~/Desktop/tf_test$ terraform apply
data.aws_ami.ubuntu: Reading...
aws_key_pair.webserver-key: Refreshing state... [id=webserver-key]
aws_security_group.my-secnew: Refreshing state... [id=sg-04db40382a109c812]
data.aws_ami.ubuntu: Read complete after 0s [id=ami-062550af7b9fa7d05]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.web will be created
  + resource "aws_instance" "web" {
      + ami                                  = "ami-062550af7b9fa7d05"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "webserver-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "ubuntu-server"
        }
      + tags_all                             = {
          + "Name" = "ubuntu-server"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = [
          + "sg-04db40382a109c812",
        ]
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + private_ip = (known after apply)
  + public_ip  = (known after apply)
  + test       = {
      + architecture          = "x86_64"
      + arn                   = "arn:aws:ec2:ap-southeast-1::image/ami-062550af7b9fa7d05"
      + block_device_mappings = [
          + {
              + device_name  = "/dev/sda1"
              + ebs          = {
                  + delete_on_termination = "true"
                  + encrypted             = "false"
                  + iops                  = "0"
                  + snapshot_id           = "snap-0eb2c63573db65a51"
                  + throughput            = "0"
                  + volume_size           = "8"
                  + volume_type           = "gp2"
                }
              + no_device    = ""
              + virtual_name = ""
            },
          + {
              + device_name  = "/dev/sdb"
              + ebs          = {}
              + no_device    = ""
              + virtual_name = "ephemeral0"
            },
          + {
              + device_name  = "/dev/sdc"
              + ebs          = {}
              + no_device    = ""
              + virtual_name = "ephemeral1"
            },
        ]
      + boot_mode             = "legacy-bios"
      + creation_date         = "2023-03-28T23:34:55.000Z"
      + deprecation_time      = "2025-03-28T23:34:55.000Z"
      + description           = "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2023-03-28"
      + ena_support           = true
      + executable_users      = null
      + filter                = [
          + {
              + name   = "name"
              + values = [
                  + "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
                ]
            },
          + {
              + name   = "virtualization-type"
              + values = [
                  + "hvm",
                ]
            },
        ]
      + hypervisor            = "xen"
      + id                    = "ami-062550af7b9fa7d05"
      + image_id              = "ami-062550af7b9fa7d05"
      + image_location        = "amazon/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
      + image_owner_alias     = "amazon"
      + image_type            = "machine"
      + imds_support          = ""
      + include_deprecated    = false
      + kernel_id             = ""
      + most_recent           = true
      + name                  = "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
      + name_regex            = null
      + owner_id              = "099720109477"
      + owners                = [
          + "099720109477",
        ]
      + platform              = ""
      + platform_details      = "Linux/UNIX"
      + product_codes         = []
      + public                = true
      + ramdisk_id            = ""
      + root_device_name      = "/dev/sda1"
      + root_device_type      = "ebs"
      + root_snapshot_id      = "snap-0eb2c63573db65a51"
      + sriov_net_support     = "simple"
      + state                 = "available"
      + state_reason          = {
          + code    = "UNSET"
          + message = "UNSET"
        }
      + tags                  = {}
      + timeouts              = null
      + tpm_support           = ""
      + usage_operation       = "RunInstances"
      + virtualization_type   = "hvm"
    }

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_instance.web: Creating...
aws_instance.web: Still creating... [10s elapsed]
aws_instance.web: Still creating... [20s elapsed]
aws_instance.web: Still creating... [30s elapsed]
aws_instance.web: Provisioning with 'local-exec'...
aws_instance.web (local-exec): Executing: ["/bin/sh" "-c" "echo server private IP address is 172.31.30.230"]
aws_instance.web (local-exec): server private IP address is 172.31.30.230
aws_instance.web: Creation complete after 34s [id=i-0ad001f8bee6964a0]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

private_ip = "172.31.30.230"
public_ip = "52.221.194.212"
test = {
  "architecture" = "x86_64"
  "arn" = "arn:aws:ec2:ap-southeast-1::image/ami-062550af7b9fa7d05"
  "block_device_mappings" = toset([
    {
      "device_name" = "/dev/sda1"
      "ebs" = tomap({
        "delete_on_termination" = "true"
        "encrypted" = "false"
        "iops" = "0"
        "snapshot_id" = "snap-0eb2c63573db65a51"
        "throughput" = "0"
        "volume_size" = "8"
        "volume_type" = "gp2"
      })
      "no_device" = ""
      "virtual_name" = ""
    },
    {
      "device_name" = "/dev/sdb"
      "ebs" = tomap({})
      "no_device" = ""
      "virtual_name" = "ephemeral0"
    },
    {
      "device_name" = "/dev/sdc"
      "ebs" = tomap({})
      "no_device" = ""
      "virtual_name" = "ephemeral1"
    },
  ])
  "boot_mode" = "legacy-bios"
  "creation_date" = "2023-03-28T23:34:55.000Z"
  "deprecation_time" = "2025-03-28T23:34:55.000Z"
  "description" = "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2023-03-28"
  "ena_support" = true
  "executable_users" = tolist(null) /* of string */
  "filter" = toset([
    {
      "name" = "name"
      "values" = tolist([
        "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
      ])
    },
    {
      "name" = "virtualization-type"
      "values" = tolist([
        "hvm",
      ])
    },
  ])
  "hypervisor" = "xen"
  "id" = "ami-062550af7b9fa7d05"
  "image_id" = "ami-062550af7b9fa7d05"
  "image_location" = "amazon/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
  "image_owner_alias" = "amazon"
  "image_type" = "machine"
  "imds_support" = ""
  "include_deprecated" = false
  "kernel_id" = ""
  "most_recent" = true
  "name" = "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20230328"
  "name_regex" = tostring(null)
  "owner_id" = "099720109477"
  "owners" = tolist([
    "099720109477",
  ])
  "platform" = ""
  "platform_details" = "Linux/UNIX"
  "product_codes" = toset([])
  "public" = true
  "ramdisk_id" = ""
  "root_device_name" = "/dev/sda1"
  "root_device_type" = "ebs"
  "root_snapshot_id" = "snap-0eb2c63573db65a51"
  "sriov_net_support" = "simple"
  "state" = "available"
  "state_reason" = tomap({
    "code" = "UNSET"
    "message" = "UNSET"
  })
  "tags" = tomap({})
  "timeouts" = null /* object */
  "tpm_support" = ""
  "usage_operation" = "RunInstances"
  "virtualization_type" = "hvm"
}
jinto123@ubuntu:~/Desktop/tf_test$ ssh ubuntu@52.221.194.212
The authenticity of host '52.221.194.212 (52.221.194.212)' can't be established.
ECDSA key fingerprint is SHA256:iBXjHi/fDLWUDX+0cuEqBi0PkzYjW9ze+PsaZgr/fCs.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '52.221.194.212' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.15.0-1033-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sat Apr 29 11:44:54 UTC 2023

  System load:  0.43              Processes:             101
  Usage of /:   20.7% of 7.57GB   Users logged in:       0
  Memory usage: 22%               IPv4 address for eth0: 172.31.30.230
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-30-230:~$ ip a
